upload_max_filesize=200M
max_file_uploads=200
post_max_size=200M

/*<------------DATABASE_INFORMATION------------->*/

CREATE DATABASE COLLEGE_STAFF_MANAGEMENT;

/*<------------PERSONAL INFORMATION DETAILS------------->*/

CREATE TABLE PERSONAL_INFORMATION_DETAILS(
    STAFF_TYPE VARCHAR(50) NOT NULL,
    EMPLOYEE_ID INT AUTO_INCREMENT PRIMARY KEY,
    EMPLOYEE_TYPE VARCHAR(50) NOT NULL,
    NAME VARCHAR(50) NOT NULL,
    DOB DATE NOT NULL,
    AADHAAR_NO VARCHAR(20),
    GENDER VARCHAR(8),
    MARITIAL_STATUS VARCHAR(10),
    BLOOD_GROUP VARCHAR(5),
    PAN_NO VARCHAR(20),
    ACC_NO VARCHAR(20),
    IFSC_CODE VARCHAR(20),
    KGID VARCHAR(20),
    GPFNO VARCHAR(20),
    GER_NO VARCHAR(20),
    RELIGION VARCHAR(50),
    CATEGORY VARCHAR(20),
    CASTE VARCHAR(20),
    MOBILE_NO VARCHAR(20),
    EMAIL_ID VARCHAR(255),
    POSTAL_ADDRESS VARCHAR(255),
    PERMANENT_ADDRESS VARCHAR(255),
    DESIGNATION VARCHAR(255),
    DEPARTMENT VARCHAR(255),
    MODE_OF_APPOINT VARCHAR(255),
    DATE_OF_ENTRY_SERVICE DATE,
    DEPUTATION_FROM DATE,
    PROFILE_PICTURE VARCHAR(255)
);

/*<------------ACADEMIC QUALIFICATION DETAILS-------------->*/

CREATE TABLE QUALIFICATION_DETAILS(
    SL_NO INT AUTO_INCREMENT PRIMARY KEY,
    EMPLOYEE_ID INT REFERENCES PERSONAL_INFORMATION(EMPLOYEE_ID),
    QUALIFICATION VARCHAR(100),
    BOARD_UNIVERSITY VARCHAR(255),
    YEAR_OF_PASS YEAR,
    SUBJECTS VARCHAR(255),
    RESULT_IN_PERCENT FLOAT(4),
    CLASS VARCHAR(100),
    QUALIFICATION_DOCUMENTS VARCHAR(255)
);

/*<------------SERVICE DETAILS-------------->*/

CREATE TABLE SERVICE_DETAILS(
    SL_NO INT AUTO_INCREMENT PRIMARY KEY,
    EMPLOYEE_ID INT REFERENCES PERSONAL_INFORMATION(EMPLOYEE_ID),
    NAME_OF_COLLEGE VARCHAR(100),
    SFROM DATE,
    STO DATE
);

/*<------------DEPARTMENT EXAM DETAILS-------------->*/

CREATE TABLE DEPARTMENT_EXAM_DETAILS(
    SL_NO INT AUTO_INCREMENT PRIMARY KEY,
    EMPLOYEE_ID INT REFERENCES PERSONAL_INFORMATION(EMPLOYEE_ID),
    NAME VARCHAR(100) NOT NULL,
    REG_NO VARCHAR(255),
    YEAR_OF_PASSING VARCHAR(255),
    CERTIFICATE VARCHAR(255)
);

/*<------------RC / OC / SHORT TERM COURSE / WORKSHOP / TRAINING / FDP / CONFERENCE / SEMINAR DETAILS-------------->*/

CREATE TABLE TRAINING_DETAILS(
    SL_NO INT AUTO_INCREMENT PRIMARY KEY,
    EMPLOYEE_ID INT REFERENCES PERSONAL_INFORMATION(EMPLOYEE_ID),
    TYPE VARCHAR(100) NOT NULL,
    TFROM DATE,
    TTO DATE,
    NAME_OF_COURSE VARCHAR(255),
    PLACE VARCHAR(255),
    CERTIFICATE VARCHAR(255)
);

/*<------------PAPER DETAILS-------------->*/

CREATE TABLE PAPER_DETAILS(
    SL_NO INT AUTO_INCREMENT PRIMARY KEY,
    EMPLOYEE_ID INT REFERENCES PERSONAL_INFORMATION(EMPLOYEE_ID),
    TYPE VARCHAR(100) NOT NULL,
    LEVEL VARCHAR(255),
    NAME VARCHAR(255),
    PAPER_DATE DATE,
    PAPER_TITLE VARCHAR(255),
    CERTIFICATE VARCHAR(255)
);

/*<------------BOOK PUBLISHED DETAILS-------------->*/

CREATE TABLE BOOK_PUBLISHED_DETAILS(
    SL_NO INT AUTO_INCREMENT PRIMARY KEY,
    EMPLOYEE_ID INT REFERENCES PERSONAL_INFORMATION(EMPLOYEE_ID),
    NAME VARCHAR(100) NOT NULL,
    NO_OF_CHAPTERS INT(3),
    BPFROM INT(6),
    BPTO INT(6),
    BP_YEAR YEAR,
    DOCUMENT VARCHAR(255)
);

/*<------------PROJECT DETAILS-------------->*/

CREATE TABLE PROJECT_DETAILS(
    SL_NO INT AUTO_INCREMENT PRIMARY KEY,
    EMPLOYEE_ID INT REFERENCES PERSONAL_INFORMATION(EMPLOYEE_ID),
    TYPE VARCHAR(100) NOT NULL,
    NAME VARCHAR(100) NOT NULL,
    SPONSERER VARCHAR(255),
    AMOUNT INT(10),
    YEAR_OF_SANCTION YEAR,
    UC VARCHAR(255)
);

/*<------------BOS / BOE / VALUATION MEMBER DETAILS-------------->*/

CREATE TABLE BOS_BOE_VALUATION_DEATAILS(
    ID INT AUTO_INCREMENT PRIMARY KEY,
    EMPLOYEE_ID INT REFERENCES PERSONAL_INFORMATION(EMPLOYEE_ID),
    TYPE VARCHAR(100) NOT NULL,
    BOS_YEAR YEAR,
    UNIVERSITY VARCHAR(255)
);

/*<------------GUIDESHIP DETAILS-------------->*/

CREATE TABLE GUIDESHIP_DETAILS(
    ID INT AUTO_INCREMENT PRIMARY KEY,
    EMPLOYEE_ID INT REFERENCES PERSONAL_INFORMATION(EMPLOYEE_ID),
    SUBJECT_NAME VARCHAR(100) NOT NULL,
    UNIVERSITY_NAME VARCHAR(255),
    GFROM DATE,
    GTO DATE,
    CERTIFICATE VARCHAR(255)
);

/*<------------AWARD DETAILS-------------->*/

CREATE TABLE AWARD_DETAILS(
    SL_NO INT AUTO_INCREMENT PRIMARY KEY,
    EMPLOYEE_ID INT REFERENCES PERSONAL_INFORMATION(EMPLOYEE_ID),
    NAME VARCHAR(100) NOT NULL,
    AWARD_ORGANISATION VARCHAR(255),
    CERTIFICATE VARCHAR(255)
);

/*<------------COMMITTE DETAILS-------------->*/

CREATE TABLE COMMITTE_DETAILS(
    SL_NO INT AUTO_INCREMENT PRIMARY KEY,
    EMPLOYEE_ID INT REFERENCES PERSONAL_INFORMATION(EMPLOYEE_ID),
    COMMI_NAME VARCHAR(100) NOT NULL,
    CHAIRPERSON_MEMBER VARCHAR(255),
    CMFROM VARCHAR(255),
    CMTO VARCHAR(255)
);

/*<------------GUIDESHIP STUDENT DETAILS-------------->*/

CREATE TABLE GUIDESHIP_STUDENT_DETAILS(
    SL_NO INT AUTO_INCREMENT PRIMARY KEY,
    GUIDESHIP_ID INT REFERENCES GUIDESHIP_DETAILS(ID),
    STUDENT_NAME VARCHAR(100) NOT NULL,
    REGDATE_ID VARCHAR(255),
    TITLE_OF_THESIS VARCHAR(255),
    COMPLETION_DATE VARCHAR(255)
);

/*<------------MEETING_VALUATION DETAILS-------------->*/

CREATE TABLE MEETING_VALUATION_DETAILS(
    SL_NO INT AUTO_INCREMENT PRIMARY KEY,
    ID INT REFERENCES BOS_BOE_VALUATION_DEATAILS(ID),
    MEETING_YEAR VARCHAR(100) NOT NULL,
    MFROM VARCHAR(255),
    MTO VARCHAR(255),
    ATTENDANCE VARCHAR(255)
);

/*<------------FUNCTION_MASTER DETAILS-------------->*/

CREATE TABLE FUNCTION_MASTER(
    CATEGORY_ID INT AUTO_INCREMENT PRIMARY KEY,
    CATEGORY_NAME VARCHAR(255)
);

CREATE TABLE FUNCTION_DATA(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    TITLE VARCHAR(255),
    PROGRAM_DATE DATE,
    NAME VARCHAR(255),
    NO_OF_STUDENTS_ATTENDED INT,
    PROGRAM_DETAILS TEXT
);

CREATE TABLE FUNCTION_PICTURES(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    FUNCTION_ID INT REFERENCES FUNCTION_DATA(ID),
    PICTURE_NAME VARCHAR(255)
);

CREATE TABLE FUNCTION_GUEST(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    FUNCTION_ID INT REFERENCES FUNCTION_DATA(ID),
    GUEST_NAME VARCHAR(255)
);

CREATE TABLE FUNCTION_COORDINATOR(
    ID INT PRIMARY KEY AUTO_INCREMENT,
    FUNCTION_ID INT REFERENCES FUNCTION_DATA(ID),
    COORDINATOR_NAME VARCHAR(255)
);

CREATE TABLE FUNCTION_CATEGORY( 
    ID INT PRIMARY KEY AUTO_INCREMENT, 
    FUNCTION_ID INT REFERENCES FUNCTION_DATA(ID), 
    CATEGORY_NAME VARCHAR(255) 
);

CREATE TABLE PROMOTION_DATA(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    EMPLOYEE_ID INT REFERENCES personal_information_details(EMPLOYEE_ID),
    DESIGNATION VARCHAR(255),
    PROMOTION_DATE DATE,
    ORDER_COPY VARCHAR(255)
);

CREATE TABLE DEPUTATION_DATA(
	ID INT PRIMARY KEY AUTO_INCREMENT,
    EMPLOYEE_ID INT REFERENCES personal_information_details(EMPLOYEE_ID),
    DEPUTATION_DATE DATE,
    INSTITUTE VARCHAR(255)
);